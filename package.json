{
  "private": true,
  "name": "ocaml-deprecated",
  "displayName": "OCaml (deprecated)",
  "description": "Rich OCaml language support for Visual Studio Code",
  "version": "0.6.43",
  "publisher": "hackwaly",
  "icon": "images/colour-icon.png",
  "engines": {
    "vscode": "^1.6.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/hackwaly/vscode-ocaml"
  },
  "categories": [
    "Languages",
    "Linters",
    "Debuggers"
  ],
  "activationEvents": [
    "onCommand:ocaml.switch_mli_ml",
    "onCommand:ocaml.repl",
    "onCommand:ocaml.repl_send",
    "onCommand:ocaml.repl_send_all",
    "onCommand:ocaml.repl_send_stmt",
    "onCommand:ocaml.restart_merlin",
    "onCommand:ocaml.opam_switch",
    "onLanguage:ocaml",
    "onLanguage:ocamllex",
    "onLanguage:menhir"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "languages": [
      {
        "id": "ocaml",
        "aliases": [
          "OCaml"
        ],
        "extensions": [
          ".ml",
          ".mli"
        ],
        "filenames": [
          ".ocamlinit"
        ],
        "configuration": "./ocaml.configuration.json"
      },
      {
        "id": "ocamllex",
        "aliases": [
          "OCamllex"
        ],
        "extensions": [
          ".mll"
        ],
        "configuration": "./ocamllex.configuration.json"
      },
      {
        "id": "menhir",
        "aliases": [
          "Menhir",
          "OCamlyacc"
        ],
        "extensions": [
          ".mly"
        ],
        "configuration": "./menhir.configuration.json"
      }
    ],
    "problemMatchers": [
      {
        "name": "ocamlc",
        "owner": "ocaml",
        "fileLocation": "relative",
        "pattern": [
          {
            "regexp": "^File \"(.*)\", line (\\d+)(?:, characters (\\d+)-(\\d+))?:$",
            "file": 1,
            "line": 2,
            "column": 3,
            "endColumn": 4
          },
          {
            "regexp": "^(?:(?:Parse\\s+)?(Warning|[Ee]rror)(?:\\s+\\d+)?:)?\\s+(.*)$",
            "severity": 1,
            "message": 2,
            "loop": true
          }
        ]
      }
    ],
    "commands": [
      {
        "category": "OCaml",
        "command": "ocaml.switch_mli_ml",
        "title": "Switch Signature/Implementation"
      },
      {
        "category": "OCaml",
        "command": "ocaml.repl",
        "title": "New REPL Session"
      },
      {
        "category": "OCaml",
        "command": "ocaml.repl_send",
        "title": "Send Selection to REPL Session"
      },
      {
        "category": "OCaml",
        "command": "ocaml.repl_send_all",
        "title": "Send File to REPL Session"
      },
      {
        "category": "OCaml",
        "command": "ocaml.repl_send_stmt",
        "title": "Send Selection as Statement to REPL Session"
      },
      {
        "category": "OCaml",
        "command": "ocaml.restart_merlin",
        "title": "Restart Merlin Session"
      },
      {
        "category": "OCaml",
        "command": "ocaml.opam_switch",
        "title": "Opam Switch"
      }
    ],
    "grammars": [
      {
        "language": "ocaml",
        "scopeName": "source.ocaml",
        "path": "./syntaxes/OCaml.tmLanguage"
      },
      {
        "language": "ocamllex",
        "scopeName": "source.ocamllex",
        "path": "./syntaxes/OCamllex.tmLanguage"
      },
      {
        "language": "menhir",
        "scopeName": "source.menhir",
        "path": "./syntaxes/Menhir.tmLanguage"
      }
    ],
    "snippets": [
      {
        "language": "menhir",
        "path": "./snippets/menhir.json"
      }
    ],
    "debuggers": [
      {
        "type": "ocamldebug",
        "label": "OCaml",
        "program": "./out/src/debug/debug.js",
        "runtime": "node",
        "enableBreakpointsFor": {
          "languageIds": [
            "ocaml",
            "ocamllex",
            "menhir"
          ]
        },
        "initialConfigurations": [
          {
            "name": "OCaml",
            "type": "ocamldebug",
            "request": "launch",
            "program": "${workspaceRoot}/main.d.byte",
            "console": "internalConsole",
            "stopOnEntry": false
          }
        ],
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "cd": {
                "type": "string",
                "description": "The working directory for ocamldebug."
              },
              "includePath": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The list of include directories for ocamldebug."
              },
              "console": {
                "enum": [
                  "internalConsole",
                  "integratedTerminal",
                  "externalTerminal"
                ],
                "description": "Where to launch the debug target: internal console, integrated terminal, or external terminal.",
                "default": "internalConsole"
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Environment variables passed to the program.",
                "default": {}
              },
              "envFile": {
                "type": "string",
                "description": "Absolute path to a file containing environment variable definitions.",
                "default": "${workspaceRoot}/.env"
              },
              "noDebug": {
                "type": "boolean",
                "default": false
              },
              "program": {
                "type": "string",
                "description": "The path of program to debug."
              },
              "arguments": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The command-line arguments for the program."
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after launch.",
                "default": false
              },
              "socket": {
                "type": "string",
                "description": "The socket name or address for remote debug."
              },
              "symbols": {
                "type": "string",
                "description": "The path to OCaml debug symbols *.cds file."
              },
              "script": {
                "type": "string",
                "description": "The path to the debug script which you wish to run after debug session established."
              },
              "encoding": {
                "type": "string",
                "description": "The encoding which program's stdout/stderr used.",
                "default": "utf-8"
              },
              "ocamldebugEncoding": {
                "type": "string",
                "description": "The encoding which ocamldebug's stdout/stderr used.",
                "default": "utf-8"
              },
              "_showLogs": {
                "type": "boolean",
                "description": "Show logs which debugAdapter produced in debug window. Useful for debug debugAdapter.",
                "default": false
              }
            }
          }
        }
      }
    ],
    "configuration": {
      "type": "object",
      "title": "OCaml configuration",
      "properties": {
        "ocaml.opamPath": {
          "type": "string",
          "default": "opam",
          "description": "Path to opam."
        },
        "ocaml.useOpamToResolve": {
          "type": "boolean",
          "default": false,
          "description": "Use opam to resolve executable paths this extension needs."
        },
        "ocaml.ocamldebugPath": {
          "type": "string",
          "default": "ocamldebug",
          "description": "Path to ocamldebug."
        },
        "ocaml.ocpIndentPath": {
          "type": "string",
          "default": "ocp-indent",
          "description": "Path to ocp-indent."
        },
        "ocaml.merlinPath": {
          "type": "string",
          "default": "ocamlmerlin",
          "description": "Path to ocamlmerlin."
        },
        "ocaml.lintOnChange": {
          "type": "boolean",
          "default": true,
          "description": "Do lint when made changes."
        },
        "ocaml.lintOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Do lint when save document."
        },
        "ocaml.lintDelay": {
          "type": "number",
          "default": 500,
          "description": "Time to delay lint when made changes."
        },
        "ocaml.replPath.windows": {
          "type": "string",
          "default": "ocaml.exe",
          "description": "Path to OCaml REPL (eg. ocaml.exe, utop.exe ...) on Windows OS."
        },
        "ocaml.replPath.unix": {
          "type": "string",
          "default": "ocaml",
          "description": "Path to OCaml REPL (eg. ocaml, utop ...) on Unix-like OS."
        },
        "ocaml.replFocus": {
          "type": "boolean",
          "default": false,
          "description": "Focus REPL terminal after send selection."
        },
        "ocaml.replNewline": {
          "type": "boolean",
          "default": true,
          "description": "Append newline when send selection to REPL."
        }
      }
    },
    "configurationDefaults": {
      "[ocaml]": {
        "editor.tabSize": 2,
        "editor.insertSpaces": true
      },
      "[ocamllex]": {
        "editor.tabSize": 2,
        "editor.insertSpaces": true
      },
      "[menhir]": {
        "editor.tabSize": 2,
        "editor.insertSpaces": true
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "node ./node_modules/vscode/bin/compile",
    "compile": "node ./node_modules/vscode/bin/compile -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "devDependencies": {
    "typescript": "^1.8.5",
    "vscode": "^0.11.0"
  },
  "dependencies": {
    "compare-versions": "^3.0.1",
    "freeport": "^1.0.5",
    "get-stream": "^2.2.1",
    "iconv-lite": "^0.4.13",
    "tiny-promisify": "^0.1.1",
    "vscode-debugadapter": "^1.20.0",
    "vscode-debugprotocol": "^1.20.0"
  }
}
