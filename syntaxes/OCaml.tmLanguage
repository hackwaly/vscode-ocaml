<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ml</string>
		<string>mli</string>
	</array>
	<key>name</key>
	<string>OCaml</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#hash_bang</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#character_literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#character_literal_crossline</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#quoted_string_literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numeric_literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constant_keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operator_keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#ident</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>character_literal</key>
		<dict>
			<key>match</key>
			<string>'(?:[^\\'\r\n]|\\(?:[\\'"ntbr ]|[0-9]{3}|o[0-3][0-7]{2}|x[0-9a-fA-F]{2}))'</string>
			<key>name</key>
			<string>constant.character.ocaml</string>
		</dict>
		<key>character_literal_crossline</key>
		<dict>
			<key>begin</key>
			<string>'$</string>
			<key>end</key>
			<string>^'|(?=.)</string>
			<key>name</key>
			<string>constant.character.ocaml</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>begin</key>
			<string>\(\*</string>
			<key>end</key>
			<string>\*\)</string>
			<key>name</key>
			<string>comment.block.ocaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>comment</key>
					<string>string inside comment</string>
					<key>end</key>
					<string>"</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{([a-z_]*)\|</string>
					<key>comment</key>
					<string>quoted string inside comment</string>
					<key>end</key>
					<string>\|\1}</string>
				</dict>
			</array>
		</dict>
		<key>constant_keyword</key>
		<dict>
			<key>match</key>
			<string>\b(?:true|false)\b</string>
			<key>name</key>
			<string>constant.language.ocaml</string>
		</dict>
		<key>hash_bang</key>
		<dict>
			<key>begin</key>
			<string>(#!)[ \t]*([^ ]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.hashbang.ocaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.filename.ocaml</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>multiline hashbang is not implemented</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.hashbang.ocaml</string>
		</dict>
		<key>ident</key>
		<dict>
			<key>match</key>
			<string>[a-zA-Z_\192-\214\216-\246\248-\255][a-zA-Z_0-9\192-\214\216-\246\248-\255]*</string>
			<key>name</key>
			<string>entity.name</string>
		</dict>
		<key>keyword</key>
		<dict>
			<key>match</key>
			<string>\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|or|parser|private|rec|sig|struct|then|to|try|type|val|virtual|when|while|with)\b</string>
			<key>name</key>
			<string>keyword.ocaml</string>
		</dict>
		<key>numeric_literal</key>
		<dict>
			<key>match</key>
			<string>(?:[0-9][0-9_]*(?:\.[0-9_]*)?(?:[eE][+-]?[0-9][0-9_]*)?|0[xX][0-9a-fA-F][0-9a-fA-F_]*(?:\.[0-9a-fA-F_]*)?(?:[pP][+-]?[0-9][0-9_]*)?|0[oO][0-7][0-7_]*|0[bB][01][01_]*)[g-zG-Z]?</string>
			<key>name</key>
			<string>constant.numeric.ocaml</string>
		</dict>
		<key>operator_keyword</key>
		<dict>
			<key>match</key>
			<string>\b(?:lor|lxor|mod|land|lsl|lsr|asr)\b</string>
			<key>name</key>
			<string>keyword.operator.ocaml</string>
		</dict>
		<key>quoted_string_literal</key>
		<dict>
			<key>begin</key>
			<string>{([a-z_]*)\|</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.delimiter.ocaml</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>string.unquoted.ocaml</string>
			<key>end</key>
			<string>\|\1}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.delimiter.ocaml</string>
				</dict>
			</dict>
		</dict>
		<key>string_literal</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.ocaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(?:$|[\\'"ntbr ]|[0-9]{3}|o[0-3][0-7]{2}|x[0-9a-fA-F]{2})</string>
					<key>name</key>
					<string>constant.character.escape.ocaml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.ocaml</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.ocaml</string>
	<key>uuid</key>
	<string>F816FA69-6EE8-11D9-BF2D-000D93589AF6</string>
</dict>
</plist>
